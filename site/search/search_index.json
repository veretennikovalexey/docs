{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0421\u0441\u044b\u043b\u043a\u0438 \u041d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0438 \u041c\u0438\u0441\u0442\u0440\u0430\u043b\u044c \u0424\u0440\u0430\u043d\u0446\u0438\u044f \u041b\u0451\u0448\u0430 Le Cha(t) Mistral AI ANTHROP\\C Claude Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#_1","text":"","title":"\u0421\u0441\u044b\u043b\u043a\u0438"},{"location":"#_2","text":"\u041c\u0438\u0441\u0442\u0440\u0430\u043b\u044c \u0424\u0440\u0430\u043d\u0446\u0438\u044f \u041b\u0451\u0448\u0430 Le Cha(t) Mistral AI ANTHROP\\C Claude","title":"\u041d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0438"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"about.md alex","title":"About"},{"location":"about/#aboutmd","text":"alex","title":"about.md"},{"location":"alpine/","text":"alpine https://itsfoss.com/alpine-linux-virtualbox/ https://www.alpinelinux.org/downloads/ https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/alpine-virt-3.21.3-x86_64.iso https://dl-cdn.alpinelinux.org/alpine/ https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/ alpine-virt-3.21.3-x86_64 64 512 \u041a\u0411\u0430\u0439\u0442 https://www.virtualbox.org/ https://www.virtualbox.org/wiki/Downloads https://download.virtualbox.org/virtualbox/7.1.6/VirtualBox-7.1.6-167084-Win.exe https://download.virtualbox.org/virtualbox/ 'https://download.virtualbox.org/virtualbox/7.1.6/' VirtualBox-7.1.6-167084-Win 120 134 \u041a\u0411\u0430\u0439\u0442 Oracle_VirtualBox_Extension_Pack-7.1.6 22 435 \u041a\u0411\u0430\u0439\u0442 \u0412\u0435\u0440\u0441\u0438\u044f 7.1.6r167084 VirtualBox \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0418\u043c\u044f: Alpine Linux \u0414\u0438\u0441\u043a: 25 \u0413\u0411\u0430\u0439\u0442 \u0412\u0438\u0434\u0435\u043e\u043f\u0430\u043c\u044f\u0442\u044c: 128 \u041c\u0411\u0430\u0439\u0442 \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c root setup-alpine us us workhost Interface: Enter 3 \u0440\u0430\u0437\u0430 Password: 1 Timezone: Europe Moscow Proxy: Enter 2 \u0440\u0430\u0437\u0430 APK Mirror: f User: alex Full name: Enter Password: 1 ssh: Enter 2 \u0440\u0430\u0437\u0430 Disk: ? sda sys y poweroff \u0418\u0437\u044a\u044f\u0442\u044c \u0434\u0438\u0441\u043a \u0438\u0437 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0430 apk add nano groups alex adduser <your-username> wheel cat /etc/doas.d/doas.conf permit persist :wheel nano /etc/doas.d/doas.conf \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 Alpine Linux \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0451\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430. \u041d\u043e \u043e\u043d \u0432\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u043a\u0435\u0442\u043e\u0432. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e nano /etc/apk/repositories #/media/cdrom/apks http://mirror.hyperdedic.ru/alpinelinux/v3.21/main #http://mirror.hyperdedic.ru/alpinelinux/v3.21/community \u043d\u0430\u0434\u043e \u0443\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u043d\u0438\u0436\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0442.\u0435. \u0443\u0431\u0440\u0430\u0442\u044c #) \u0438 \u0431\u0443\u0434\u0435\u0442 \u0442\u0430\u043a #/media/cdrom/apks http://mirror.hyperdedic.ru/alpinelinux/v3.21/main http://mirror.hyperdedic.ru/alpinelinux/v3.21/community cat /etc/apk/repositories setup-xorg-base apk add xfce4 xfce4-terminal xfce4-screensaver lightdm-gtk-greeter dbus rc-service dbus start rc-update add dbus setup-devd udev rc-service lightdm start ... rc-update add lightdm apk add elogind polkit-elogind reboot","title":"alpine"},{"location":"alpine/#alpine","text":"https://itsfoss.com/alpine-linux-virtualbox/ https://www.alpinelinux.org/downloads/ https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/alpine-virt-3.21.3-x86_64.iso https://dl-cdn.alpinelinux.org/alpine/ https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/ alpine-virt-3.21.3-x86_64 64 512 \u041a\u0411\u0430\u0439\u0442 https://www.virtualbox.org/ https://www.virtualbox.org/wiki/Downloads https://download.virtualbox.org/virtualbox/7.1.6/VirtualBox-7.1.6-167084-Win.exe https://download.virtualbox.org/virtualbox/ 'https://download.virtualbox.org/virtualbox/7.1.6/' VirtualBox-7.1.6-167084-Win 120 134 \u041a\u0411\u0430\u0439\u0442 Oracle_VirtualBox_Extension_Pack-7.1.6 22 435 \u041a\u0411\u0430\u0439\u0442 \u0412\u0435\u0440\u0441\u0438\u044f 7.1.6r167084","title":"alpine"},{"location":"alpine/#virtualbox","text":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0418\u043c\u044f: Alpine Linux \u0414\u0438\u0441\u043a: 25 \u0413\u0411\u0430\u0439\u0442 \u0412\u0438\u0434\u0435\u043e\u043f\u0430\u043c\u044f\u0442\u044c: 128 \u041c\u0411\u0430\u0439\u0442","title":"VirtualBox"},{"location":"alpine/#_1","text":"root setup-alpine us us workhost Interface: Enter 3 \u0440\u0430\u0437\u0430 Password: 1 Timezone: Europe Moscow Proxy: Enter 2 \u0440\u0430\u0437\u0430 APK Mirror: f User: alex Full name: Enter Password: 1 ssh: Enter 2 \u0440\u0430\u0437\u0430 Disk: ? sda sys y poweroff","title":"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c"},{"location":"alpine/#_2","text":"apk add nano groups alex adduser <your-username> wheel cat /etc/doas.d/doas.conf permit persist :wheel nano /etc/doas.d/doas.conf \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 Alpine Linux \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0451\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430. \u041d\u043e \u043e\u043d \u0432\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u043a\u0435\u0442\u043e\u0432. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e nano /etc/apk/repositories #/media/cdrom/apks http://mirror.hyperdedic.ru/alpinelinux/v3.21/main #http://mirror.hyperdedic.ru/alpinelinux/v3.21/community \u043d\u0430\u0434\u043e \u0443\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441 \u043d\u0438\u0436\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0442.\u0435. \u0443\u0431\u0440\u0430\u0442\u044c #) \u0438 \u0431\u0443\u0434\u0435\u0442 \u0442\u0430\u043a #/media/cdrom/apks http://mirror.hyperdedic.ru/alpinelinux/v3.21/main http://mirror.hyperdedic.ru/alpinelinux/v3.21/community cat /etc/apk/repositories","title":"\u0418\u0437\u044a\u044f\u0442\u044c \u0434\u0438\u0441\u043a \u0438\u0437 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0430"},{"location":"alpine/#setup-xorg-base","text":"apk add xfce4 xfce4-terminal xfce4-screensaver lightdm-gtk-greeter dbus rc-service dbus start rc-update add dbus setup-devd udev rc-service lightdm start ... rc-update add lightdm apk add elogind polkit-elogind reboot","title":"setup-xorg-base"},{"location":"docker/","text":"docker https://ugolok.vercel.app/books/docker/use_docker.pdf docker run debian echo \"Hello World\" docker run -i -t debian /bin/bash exit docker run -h CONTAINER -i -t debian /bin/bash docker ps docker rm docker rm -v $(docker ps -aq -f status=exited) docker run -it --name cowsay --hostname cowsay debian bash apt-get update apt-get install -y cowsay fortune","title":"docker"},{"location":"docker/#docker","text":"https://ugolok.vercel.app/books/docker/use_docker.pdf docker run debian echo \"Hello World\" docker run -i -t debian /bin/bash exit docker run -h CONTAINER -i -t debian /bin/bash docker ps docker rm docker rm -v $(docker ps -aq -f status=exited) docker run -it --name cowsay --hostname cowsay debian bash apt-get update apt-get install -y cowsay fortune","title":"docker"},{"location":"fabius/","text":"fabius.md \u0418\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 41 \u0441\u0447\u0451\u0442\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u0442\u0430\u0432\u043a\u043e\u0439 \u041d\u0414\u0421 IF !YESNO( '\u0418\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 41 \u0441\u0447\u0451\u0442\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u0442\u0430\u0432\u043a\u043e\u0439 \u041d\u0414\u0421?', true ) RETURN ENDIF LOCAL msg, AA, FLD, SQL, _ FLD := ' NDS,N,5; sm,n,14,4; AMNT,N,14,4;; debt,c,12; drefl1,c,4; danal1,n,5; drefl2,c,4; danal2,n,5;; kred,c,12; krefl1,c,4; kanal1,n,5; krefl2,c,4; kanal2,n,5;' // R08 try WAITMSG( '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445', msg ) _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, -EkSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R08 ' AND KOD > 0 AND EAMNT < 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, EDSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R08 ' AND KOD > 0 AND EAMNT >= 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON kanal2 = KOD ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [2' AND NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [1' AND NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE sm = 0 AND AMNT = 0 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [2' ; WHERE KRED = '41] + DLM + [2] + DLM + [1' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [1' ; WHERE KRED = '41] + DLM + [2] + DLM + [2' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DREFL1 = KREFL1, DANAL1 = KANAL1, DREFL2 = KREFL2, DANAL2 = KANAL2 ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'krefl1', 'krefl2', 'kanal1', 'kanal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, krefl1, krefl2, kanal1, kanal2, sm \"sum\", AMNT from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) finally closetable( _ ) HIDEMSG( msg ) end if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa, ~IsRepl := FALSE ) endif // R11 FLD := ' NDS,N,5; sm,n,14,4; AMNT,N,14,4;; debt,c,12; drefl1,c,4; danal1,n,5; drefl2,c,4; danal2,n,5;; kred,c,12; krefl1,c,4; kanal1,n,5; krefl2,c,4; kanal2,n,5;' try WAITMSG( '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445', msg ) _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, -EkSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R11 ' AND KOD > 0 AND EAMNT < 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, EDSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R11 ' AND KOD > 0 AND EAMNT >= 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON kanal2 = KOD ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [2' AND NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [1' AND NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE sm = 0 AND AMNT = 0 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [2' ; WHERE KRED = '41] + DLM + [2] + DLM + [1' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [1' ; WHERE KRED = '41] + DLM + [2] + DLM + [2' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DREFL1 = KREFL1, DANAL1 = KANAL1, DREFL2 = KREFL2, DANAL2 = KANAL2 ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'krefl1', 'krefl2', 'kanal1', 'kanal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, krefl1, krefl2, kanal1, kanal2, sm \"sum\", AMNT from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) finally closetable( _ ) HIDEMSG( msg ) end if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa, ~IsRepl := FALSE ) endif 41.2 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 (41.2.1 \u0438\u043b\u0438 41.2.2) \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0442\u0430\u0432\u043a\u0438 \u041d\u0414\u0421 IF !YESNO( '\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0451\u0442 \u043a \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043c \u043d\u0430 41.2 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041d\u0414\u0421 ?', TRUE ) RETURN ENDIF // LOCAL R20ANAL := 2501 IF UPPER( USERNAME ) = '\u0412\u0415\u0420\u0415\u0422\u0415\u041d\u041d' ELSE RETURN ENDIF LOCAL AA, SQL, FLD, _ FLD := ' NDS,N,5; SM,N,12,2; AMNT,N,14,4;; DEBT,C,12; DREFL1,C,4; DANAL1,N,5; DREFL2,C,4; DANAL2,N,5;; KRED,C,12; KREFL1,C,4; KANAL1,N,5; KREFL2,C,4; KANAL2,N,5; ' TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT \"EDSUM\", EAMNT, BKACNT, REFLANAL, ANAL, ; REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '41.2 ' AND REFLANAL = 'R20 ' AND ANAL > 0 ; AND KOD > 0 AND ( EDSUM > 0 and EAMNT > 0 )] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, AMNT, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON DANAL2 = KOD ; WHERE DREFL2 = 'R08 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON DANAL2 = KOD ; WHERE DREFL2 = 'R11 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41.2.1' ; WHERE NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41.2.2' ; WHERE NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ SELECT \"EDSUM\" * ( -1 ), EAMNT * ( -1 ), BKACNT, REFLANAL, ANAL, ; REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '41.2 ' AND REFLANAL = 'R20 ' AND ANAL > 0 ; AND KOD > 0 AND ( EDSUM > 0 and EAMNT > 0 )] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, AMNT, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET KRED = '79.2' ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, ; sm \"sum\", AMNT ; from ] + TmpFilePath( _ ) // + [ WHERE DANAL2 = 50458 ] aa := sqltoarr( sql, fld ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa ) endif // REFL DREFL2 42.1 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 (42.1.1 \u0438\u043b\u0438 42.1.2) \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0442\u0430\u0432\u043a\u0438 \u041d\u0414\u0421 IF !YESNO( '\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0451\u0442 \u043a \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043c \u043d\u0430 42.1 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041d\u0414\u0421 ?', TRUE ) RETURN ENDIF IF UPPER( USERNAME ) = '\u0412\u0415\u0420\u0415\u0422\u0415\u041d\u041d' ELSE RETURN ENDIF LOCAL AA, SQL, FLD, _ FLD := ' NDS,N,5; SM,N,12,2;; DEBT,C,12; DREFL1,C,4; DANAL1,N,5; DREFL2,C,4; DANAL2,N,5;; KRED,C,12; KREFL1,C,4; KANAL1,N,5; KREFL2,C,4; KANAL2,N,5; ' TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT /*TOP 1*/ EKSUM * ( -1 ), BKACNT, REFLANAL, ANAL, REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '42.1 ' AND ; REFLANAL = 'R20 ' AND ANAL > 0 AND KOD > 0 AND EKSUM > 0 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON DANAL2 = KOD ; WHERE DREFL2 = 'R08 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON DANAL2 = KOD ; WHERE DREFL2 = 'R11 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '42.1.1' ; WHERE NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '42.1.2' ; WHERE NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ SELECT /*TOP 1*/ EKSUM, BKACNT, REFLANAL, ANAL, REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '42.1 ' AND ; REFLANAL = 'R20 ' AND ANAL > 0 AND KOD > 0 AND EKSUM > 0 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET KRED = '79.2' ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'sum' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, sm \"sum\"; from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa ) endif // REFL DREFL2 GETTIME() \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0438\u0441\u043b\u0430 N5.2 (\u0427\u0427.\u041c\u041c) EXCEL >> FRO \u041f\u0440\u0438\u0451\u043c \u0447\u0435\u043a\u043e\u0432 \u0438\u0437 EXCEL LOCAL B,E,F,G,H,I,K,L,J LOCAL SQL, PARTOFTIME, II, AA, FLD, _ AA := RANGEFROMEXCEL() IF EMPTY( AA ) RETURN ENDIF FLD := ' NUMDOC,C,10; DATDOC,D; D1NAME,C,20; D2NAME,C,20; K1NAME,C,20;; NATTR7,N,10; SM,N,12,2; EXTSUM,N,12,2; NDSSUM,N,12,2; ' B := ASCANN( AA, '\u041a\u0430\u0441\u0441\u0430', 3 ) E := ASCANN( AA, '\u041d\u043e\u043c\u0435\u0440 \u0447\u0435\u043a\u0430', 3 ) F := ASCANN( AA, '\u0424\u0414 \u2116', 3 ) G := ASCANN( AA, '\u0414\u0430\u0442\u0430 \u0447\u0435\u043a\u0430', 3 ) H := ASCANN( AA, '\u0412\u0440\u0435\u043c\u044f \u0447\u0435\u043a\u0430', 3 ) // \u041a\u041e\u041b\u041e\u041d\u041a\u0410 8 I := ASCANN( AA, '\u0422\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438', 3 ) K := ASCANN( AA, '\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438', 3 ) L := ASCANN( AA, '\u0411\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438', 3 ) J := ASCANN( AA, '\u0421\u0443\u043c\u043c\u0430 \u0447\u0435\u043a\u0430', 3 ) TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) FOR II := 5 TO LEN( AA[1] ) ( _ )->( DBAPPEND() ) ( _ )->D1NAME := AA[ B, II ] ( _ )->NUMDOC := AA[ E, II ] ( _ )->NATTR7 := AA[ F, II ] ( _ )->DATDOC := AA[ G, II ] PARTOFTIME := AA[ H, II ] ( _ )->K1NAME := AA[ I, II ] ( _ )->SM := AA[ K, II ] ( _ )->EXTSUM := AA[ L, II ] ( _ )->NDSSUM := AA[ J, II ] PARTOFTIME := VAL( PARTOFTIME ) PARTOFTIME := ROUND( PARTOFTIME, 6 ) PARTOFTIME := FRAC( PARTOFTIME ) PARTOFTIME := ROUND( PARTOFTIME, 6 ) PARTOFTIME := ROUND( PARTOFTIME * 86400 ) ( _ )->D2NAME := CONV_SEC_TO_HMS( PARTOFTIME, TRUE ) NEXT FLD := { 'NUMDOC', 'DATDOC', 'D1NAME', 'D2NAME', 'K1NAME', ; 'NATTR7', 'SUM', 'EXTSUM', 'NDSSUM' } SQL := [ SELECT NUMDOC, DATDOC, D1NAME, D2NAME, K1NAME, ; NATTR7, SM AS \"SUM\", EXTSUM, NDSSUM ; FROM ] + TmpFilePath( _ ) AA := SQLTOARR( SQL, FLD ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'OFD', '2', docs1->rgnum,, fld, aa ) endif // D1NAME \u041a\u0430\u0441\u0441\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u041c\u0430\u0433\u0430\u0437\u0438\u043d 8 // D2NAME \u0412\u0420\u0415\u041c\u042f // NUMDOC \u041d\u043e\u043c\u0435\u0440 \u0447\u0435\u043a\u0430 // NATTR7 \u0424\u0414 \u2116 // DATDOC \u0414\u0430\u0442\u0430 \u0447\u0435\u043a\u0430 // K1NAME \u0422\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 // SUM \u041d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438 // EXTSUM \u0411\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438 // NDSSUM \u0421\u0443\u043c\u043c\u0430 \u0447\u0435\u043a\u0430 FRO1 >> OFD2 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \"\u0427\u0435\u043a\u0438 \u041e\u0424\u0414\" \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u0430\u0431\u0438\u0443\u0441\u0430 LOCAL SQL SQL := [ UPDATE OFD2 ; SET ; OFD2.NATTR1 = FRO1.\"SUM\", ; OFD2.NATTR2 = FRO1.NATTR6, ; OFD2.NATTR5 = FRO1.EXTSUM ; FROM DOCS] + RET_F_EXT() + [ OFD2 ; LEFT OUTER JOIN ; DOCP] + RET_F_EXT() + [ FRO1 ; ON OFD2.DANAL1 = FRO1.DANAL2 AND OFD2.DATDOC = FRO1.DATDOC AND OFD2.NATTR7 = FRO1.NATTR7 ; WHERE OFD2.KINDDOC = 'OFD' AND OFD2.LVLNUM = '2' AND ; FRO1.KINDDOC = 'FRO' AND FRO1.LVLNUM = '1' AND ; OFD2.PARENT = '] + DOCS1->RGNUM + [' ] SIMPLESQL( SQL, OPDATAPATH ) SQL := [ UPDATE OFD2 ; SET ; OFD2.NATTR3 = OFD2.NDSSUM - OFD2.NATTR1, ; OFD2.NATTR4 = OFD2.EXTSUM - OFD2.NATTR2, ; OFD2.NATTR6 = OFD2.\"SUM\" - OFD2.NATTR5 ; FROM DOCS] + RET_F_EXT() + [ OFD2 ; WHERE ; OFD2.KINDDOC = 'OFD' AND ; OFD2.LVLNUM = '2' AND ; OFD2.PARENT = '] + DOCS1->RGNUM + [' ] SIMPLESQL( SQL, OPDATAPATH ) REFRESH() // OFD2 // \u0418\u0422\u041e\u0413\u041e \u041e\u0424\u0414 NDSSUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR1 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR3 // \u0431\u0435\u0437\u043d\u0430\u043b \u041e\u0424\u0414 EXTSUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR2 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR4 // \u043d\u0430\u043b \u041e\u0424\u0414 SUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR5 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR6 // OFD2.NATTR3 \u0418\u0422\u041e\u0413\u041e \u0420\u0410\u0417\u041d\u0418\u0426\u0410 // OFD2.NATTR5 \u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // FRO1.EXTSUM \u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // OFD2.NATTR2 \u0431\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // FRO1.NATTR6 \u0431\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // OFD2.DANAL1 R179.KOD // FRO1.DANAL2 R179.KOD // OFD2.NATTR7 \u043d\u043e\u043c\u0435\u0440 \u0444\u0438\u0441\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 // FRO1.NATTR7 \u043d\u043e\u043c\u0435\u0440 \u0444\u0438\u0441\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 // SQL := [ SELECT * ; // FROM DOCS] + RET_F_EXT() + [ OFD2 ; // LEFT OUTER JOIN ; // DOCP] + RET_F_EXT() + [ FRO1 ; // ON OFD2.DANAL1 = FRO1.DANAL2 AND OFD2.DATDOC = FRO1.DATDOC AND OFD2.NATTR7 = FRO1.NATTR7 ; // WHERE OFD2.KINDDOC = 'OFD' AND OFD2.LVLNUM = '2' AND ; // FRO1.KINDDOC = 'FRO' AND FRO1.LVLNUM = '1' AND ; // OFD2.PARENT = '] + DOCS1->RGNUM + [' ]","title":"fabius"},{"location":"fabius/#fabiusmd","text":"","title":"fabius.md"},{"location":"fabius/#41","text":"IF !YESNO( '\u0418\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 41 \u0441\u0447\u0451\u0442\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u0442\u0430\u0432\u043a\u043e\u0439 \u041d\u0414\u0421?', true ) RETURN ENDIF LOCAL msg, AA, FLD, SQL, _ FLD := ' NDS,N,5; sm,n,14,4; AMNT,N,14,4;; debt,c,12; drefl1,c,4; danal1,n,5; drefl2,c,4; danal2,n,5;; kred,c,12; krefl1,c,4; kanal1,n,5; krefl2,c,4; kanal2,n,5;' // R08 try WAITMSG( '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445', msg ) _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, -EkSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R08 ' AND KOD > 0 AND EAMNT < 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, EDSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R08 ' AND KOD > 0 AND EAMNT >= 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON kanal2 = KOD ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [2' AND NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [1' AND NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE sm = 0 AND AMNT = 0 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [2' ; WHERE KRED = '41] + DLM + [2] + DLM + [1' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [1' ; WHERE KRED = '41] + DLM + [2] + DLM + [2' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DREFL1 = KREFL1, DANAL1 = KANAL1, DREFL2 = KREFL2, DANAL2 = KANAL2 ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'krefl1', 'krefl2', 'kanal1', 'kanal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, krefl1, krefl2, kanal1, kanal2, sm \"sum\", AMNT from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) finally closetable( _ ) HIDEMSG( msg ) end if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa, ~IsRepl := FALSE ) endif // R11 FLD := ' NDS,N,5; sm,n,14,4; AMNT,N,14,4;; debt,c,12; drefl1,c,4; danal1,n,5; drefl2,c,4; danal2,n,5;; kred,c,12; krefl1,c,4; kanal1,n,5; krefl2,c,4; kanal2,n,5;' try WAITMSG( '\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445', msg ) _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, -EkSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R11 ' AND KOD > 0 AND EAMNT < 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ SELECT BKACNT, REFLANAL, ANAL, REFL, KOD, EAMNT, EDSUM ; FROM MTUN] + RET_F_EXT() + [ ; WHERE LEFT( BKACNT, 4 ) = '41] + DLM + [2' AND ; REFL = 'R11 ' AND KOD > 0 AND EAMNT >= 0 AND ; LENGTH( TRIM( BKACNT ) ) = 6 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [( kred, krefl1, kanal1, krefl2, kanal2, AMNT, sm ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON kanal2 = KOD ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [2' AND NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE KRED = '41] + DLM + [2] + DLM + [1' AND NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ DELETE ; FROM ] + TmpFilePath( _ ) + [ ; WHERE sm = 0 AND AMNT = 0 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [2' ; WHERE KRED = '41] + DLM + [2] + DLM + [1' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41] + DLM + [2] + DLM + [1' ; WHERE KRED = '41] + DLM + [2] + DLM + [2' ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DREFL1 = KREFL1, DANAL1 = KANAL1, DREFL2 = KREFL2, DANAL2 = KANAL2 ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'krefl1', 'krefl2', 'kanal1', 'kanal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, krefl1, krefl2, kanal1, kanal2, sm \"sum\", AMNT from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) finally closetable( _ ) HIDEMSG( msg ) end if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa, ~IsRepl := FALSE ) endif","title":"\u0418\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 41 \u0441\u0447\u0451\u0442\u0430 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u0442\u0430\u0432\u043a\u043e\u0439 \u041d\u0414\u0421"},{"location":"fabius/#412-4121-4122","text":"IF !YESNO( '\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0451\u0442 \u043a \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043c \u043d\u0430 41.2 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041d\u0414\u0421 ?', TRUE ) RETURN ENDIF // LOCAL R20ANAL := 2501 IF UPPER( USERNAME ) = '\u0412\u0415\u0420\u0415\u0422\u0415\u041d\u041d' ELSE RETURN ENDIF LOCAL AA, SQL, FLD, _ FLD := ' NDS,N,5; SM,N,12,2; AMNT,N,14,4;; DEBT,C,12; DREFL1,C,4; DANAL1,N,5; DREFL2,C,4; DANAL2,N,5;; KRED,C,12; KREFL1,C,4; KANAL1,N,5; KREFL2,C,4; KANAL2,N,5; ' TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT \"EDSUM\", EAMNT, BKACNT, REFLANAL, ANAL, ; REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '41.2 ' AND REFLANAL = 'R20 ' AND ANAL > 0 ; AND KOD > 0 AND ( EDSUM > 0 and EAMNT > 0 )] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, AMNT, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON DANAL2 = KOD ; WHERE DREFL2 = 'R08 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON DANAL2 = KOD ; WHERE DREFL2 = 'R11 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41.2.1' ; WHERE NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '41.2.2' ; WHERE NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ SELECT \"EDSUM\" * ( -1 ), EAMNT * ( -1 ), BKACNT, REFLANAL, ANAL, ; REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '41.2 ' AND REFLANAL = 'R20 ' AND ANAL > 0 ; AND KOD > 0 AND ( EDSUM > 0 and EAMNT > 0 )] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, AMNT, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET KRED = '79.2' ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'sum', 'AMNT' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, ; sm \"sum\", AMNT ; from ] + TmpFilePath( _ ) // + [ WHERE DANAL2 = 50458 ] aa := sqltoarr( sql, fld ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa ) endif // REFL DREFL2","title":"41.2 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 (41.2.1 \u0438\u043b\u0438 41.2.2) \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0442\u0430\u0432\u043a\u0438 \u041d\u0414\u0421"},{"location":"fabius/#421-4211-4212","text":"IF !YESNO( '\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u0431\u0441\u0447\u0451\u0442 \u043a \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043c \u043d\u0430 42.1 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041d\u0414\u0421 ?', TRUE ) RETURN ENDIF IF UPPER( USERNAME ) = '\u0412\u0415\u0420\u0415\u0422\u0415\u041d\u041d' ELSE RETURN ENDIF LOCAL AA, SQL, FLD, _ FLD := ' NDS,N,5; SM,N,12,2;; DEBT,C,12; DREFL1,C,4; DANAL1,N,5; DREFL2,C,4; DANAL2,N,5;; KRED,C,12; KREFL1,C,4; KANAL1,N,5; KREFL2,C,4; KANAL2,N,5; ' TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) SQL := [ SELECT /*TOP 1*/ EKSUM * ( -1 ), BKACNT, REFLANAL, ANAL, REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '42.1 ' AND ; REFLANAL = 'R20 ' AND ANAL > 0 AND KOD > 0 AND EKSUM > 0 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R08 ON DANAL2 = KOD ; WHERE DREFL2 = 'R08 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE _ ; SET NDS = PRODNDS ; FROM ] + TmpFilePath( _ ) + [ _ ; LEFT OUTER JOIN R11 ON DANAL2 = KOD ; WHERE DREFL2 = 'R11 ' ] SIMPLESQL( SQL, REFLISPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '42.1.1' ; WHERE NDS = 10 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET DEBT = '42.1.2' ; WHERE NDS = 20 ] SIMPLESQL( SQL, TEMPPATH ) SQL := [ SELECT /*TOP 1*/ EKSUM, BKACNT, REFLANAL, ANAL, REFL, KOD ; FROM MTUN1224 ; WHERE BKACNT = '42.1 ' AND ; REFLANAL = 'R20 ' AND ANAL > 0 AND KOD > 0 AND EKSUM > 0 ] SimpleSql( [ Insert into ] + TmpFilePath( _ ) + [; ( SM, DEBT, DREFL1, DANAL1, DREFL2, DANAL2 ) ] + sql, OpdataPath ) SQL := [ UPDATE ] + TmpFilePath( _ ) + [ ; SET KRED = '79.2' ] SIMPLESQL( SQL, TEMPPATH ) fld := { 'debt', 'kred', 'drefl1', 'drefl2', 'danal1', 'danal2', 'sum' } sql := [ select debt, kred, drefl1, drefl2, danal1, danal2, sm \"sum\"; from ] + TmpFilePath( _ ) aa := sqltoarr( sql, fld ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'CSP', '2', docs1->rgnum,, fld, aa ) endif // REFL DREFL2","title":"42.1 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 \u0441\u0443\u0431\u0441\u0447\u0435\u0442\u0430 (42.1.1 \u0438\u043b\u0438 42.1.2) \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0442\u0430\u0432\u043a\u0438 \u041d\u0414\u0421"},{"location":"fabius/#gettime","text":"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0438\u0441\u043b\u0430 N5.2 (\u0427\u0427.\u041c\u041c)","title":"GETTIME()"},{"location":"fabius/#excel-fro","text":"\u041f\u0440\u0438\u0451\u043c \u0447\u0435\u043a\u043e\u0432 \u0438\u0437 EXCEL LOCAL B,E,F,G,H,I,K,L,J LOCAL SQL, PARTOFTIME, II, AA, FLD, _ AA := RANGEFROMEXCEL() IF EMPTY( AA ) RETURN ENDIF FLD := ' NUMDOC,C,10; DATDOC,D; D1NAME,C,20; D2NAME,C,20; K1NAME,C,20;; NATTR7,N,10; SM,N,12,2; EXTSUM,N,12,2; NDSSUM,N,12,2; ' B := ASCANN( AA, '\u041a\u0430\u0441\u0441\u0430', 3 ) E := ASCANN( AA, '\u041d\u043e\u043c\u0435\u0440 \u0447\u0435\u043a\u0430', 3 ) F := ASCANN( AA, '\u0424\u0414 \u2116', 3 ) G := ASCANN( AA, '\u0414\u0430\u0442\u0430 \u0447\u0435\u043a\u0430', 3 ) H := ASCANN( AA, '\u0412\u0440\u0435\u043c\u044f \u0447\u0435\u043a\u0430', 3 ) // \u041a\u041e\u041b\u041e\u041d\u041a\u0410 8 I := ASCANN( AA, '\u0422\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438', 3 ) K := ASCANN( AA, '\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438', 3 ) L := ASCANN( AA, '\u0411\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438', 3 ) J := ASCANN( AA, '\u0421\u0443\u043c\u043c\u0430 \u0447\u0435\u043a\u0430', 3 ) TRY _ := CreateTmpFile( fld, '_', ~IsFreeDel := true ) FOR II := 5 TO LEN( AA[1] ) ( _ )->( DBAPPEND() ) ( _ )->D1NAME := AA[ B, II ] ( _ )->NUMDOC := AA[ E, II ] ( _ )->NATTR7 := AA[ F, II ] ( _ )->DATDOC := AA[ G, II ] PARTOFTIME := AA[ H, II ] ( _ )->K1NAME := AA[ I, II ] ( _ )->SM := AA[ K, II ] ( _ )->EXTSUM := AA[ L, II ] ( _ )->NDSSUM := AA[ J, II ] PARTOFTIME := VAL( PARTOFTIME ) PARTOFTIME := ROUND( PARTOFTIME, 6 ) PARTOFTIME := FRAC( PARTOFTIME ) PARTOFTIME := ROUND( PARTOFTIME, 6 ) PARTOFTIME := ROUND( PARTOFTIME * 86400 ) ( _ )->D2NAME := CONV_SEC_TO_HMS( PARTOFTIME, TRUE ) NEXT FLD := { 'NUMDOC', 'DATDOC', 'D1NAME', 'D2NAME', 'K1NAME', ; 'NATTR7', 'SUM', 'EXTSUM', 'NDSSUM' } SQL := [ SELECT NUMDOC, DATDOC, D1NAME, D2NAME, K1NAME, ; NATTR7, SM AS \"SUM\", EXTSUM, NDSSUM ; FROM ] + TmpFilePath( _ ) AA := SQLTOARR( SQL, FLD ) FINALLY CLOSETABLE( _ ) END if !isempty( aa ) addall( 'OFD', '2', docs1->rgnum,, fld, aa ) endif // D1NAME \u041a\u0430\u0441\u0441\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u041c\u0430\u0433\u0430\u0437\u0438\u043d 8 // D2NAME \u0412\u0420\u0415\u041c\u042f // NUMDOC \u041d\u043e\u043c\u0435\u0440 \u0447\u0435\u043a\u0430 // NATTR7 \u0424\u0414 \u2116 // DATDOC \u0414\u0430\u0442\u0430 \u0447\u0435\u043a\u0430 // K1NAME \u0422\u0438\u043f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 // SUM \u041d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438 // EXTSUM \u0411\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u044b\u043c\u0438 // NDSSUM \u0421\u0443\u043c\u043c\u0430 \u0447\u0435\u043a\u0430","title":"EXCEL &gt;&gt; FRO"},{"location":"fabius/#fro1-ofd2","text":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \"\u0427\u0435\u043a\u0438 \u041e\u0424\u0414\" \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0444\u0430\u0431\u0438\u0443\u0441\u0430 LOCAL SQL SQL := [ UPDATE OFD2 ; SET ; OFD2.NATTR1 = FRO1.\"SUM\", ; OFD2.NATTR2 = FRO1.NATTR6, ; OFD2.NATTR5 = FRO1.EXTSUM ; FROM DOCS] + RET_F_EXT() + [ OFD2 ; LEFT OUTER JOIN ; DOCP] + RET_F_EXT() + [ FRO1 ; ON OFD2.DANAL1 = FRO1.DANAL2 AND OFD2.DATDOC = FRO1.DATDOC AND OFD2.NATTR7 = FRO1.NATTR7 ; WHERE OFD2.KINDDOC = 'OFD' AND OFD2.LVLNUM = '2' AND ; FRO1.KINDDOC = 'FRO' AND FRO1.LVLNUM = '1' AND ; OFD2.PARENT = '] + DOCS1->RGNUM + [' ] SIMPLESQL( SQL, OPDATAPATH ) SQL := [ UPDATE OFD2 ; SET ; OFD2.NATTR3 = OFD2.NDSSUM - OFD2.NATTR1, ; OFD2.NATTR4 = OFD2.EXTSUM - OFD2.NATTR2, ; OFD2.NATTR6 = OFD2.\"SUM\" - OFD2.NATTR5 ; FROM DOCS] + RET_F_EXT() + [ OFD2 ; WHERE ; OFD2.KINDDOC = 'OFD' AND ; OFD2.LVLNUM = '2' AND ; OFD2.PARENT = '] + DOCS1->RGNUM + [' ] SIMPLESQL( SQL, OPDATAPATH ) REFRESH() // OFD2 // \u0418\u0422\u041e\u0413\u041e \u041e\u0424\u0414 NDSSUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR1 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR3 // \u0431\u0435\u0437\u043d\u0430\u043b \u041e\u0424\u0414 EXTSUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR2 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR4 // \u043d\u0430\u043b \u041e\u0424\u0414 SUM - \u0424\u0410\u0411\u0418\u0423\u0421 NATTR5 - \u0420\u0410\u0417\u041d\u0418\u0426\u0410 NATTR6 // OFD2.NATTR3 \u0418\u0422\u041e\u0413\u041e \u0420\u0410\u0417\u041d\u0418\u0426\u0410 // OFD2.NATTR5 \u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // FRO1.EXTSUM \u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // OFD2.NATTR2 \u0431\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // FRO1.NATTR6 \u0431\u0435\u0437\u043d\u0430\u043b\u0438\u0447\u043d\u0430\u044f \u043e\u043f\u043b\u0430\u0442\u0430 \u0444\u0430\u0431\u0438\u0443\u0441 // OFD2.DANAL1 R179.KOD // FRO1.DANAL2 R179.KOD // OFD2.NATTR7 \u043d\u043e\u043c\u0435\u0440 \u0444\u0438\u0441\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 // FRO1.NATTR7 \u043d\u043e\u043c\u0435\u0440 \u0444\u0438\u0441\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 // SQL := [ SELECT * ; // FROM DOCS] + RET_F_EXT() + [ OFD2 ; // LEFT OUTER JOIN ; // DOCP] + RET_F_EXT() + [ FRO1 ; // ON OFD2.DANAL1 = FRO1.DANAL2 AND OFD2.DATDOC = FRO1.DATDOC AND OFD2.NATTR7 = FRO1.NATTR7 ; // WHERE OFD2.KINDDOC = 'OFD' AND OFD2.LVLNUM = '2' AND ; // FRO1.KINDDOC = 'FRO' AND FRO1.LVLNUM = '1' AND ; // OFD2.PARENT = '] + DOCS1->RGNUM + [' ]","title":"FRO1 &gt;&gt; OFD2"},{"location":"kde/","text":"KDE https://cdimage.debian.org/debian-cd/current/amd64/bt-cd/debian-12.10.0-amd64-netinst.iso.torrent \u0418\u043c\u044f: kde \u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 \u041f\u0430\u043c\u044f\u0442\u044c: 1024 \u041c\u0431 \u041f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u044b: 2 \u0414\u0438\u0441\u043a: 30 \u0413\u0431 \u0413\u043e\u0442\u043e\u0432\u043e \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u041e\u0431\u0449\u0438\u0435 - \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e - \u041e\u0431\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0430 - \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0414\u0438\u0441\u043f\u043b\u0435\u0439 - \u0412\u0438\u0434\u0435\u043e\u043f\u0430\u043c\u044f\u0442\u044c - 128 \u041c\u0431 \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c 3D-\u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u0435 \u0421\u0435\u0442\u044c - \u0422\u0438\u043f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f - \u0421\u0435\u0442\u0435\u0432\u043e\u0439 \u043c\u043e\u0441\u0442 \u041e\u041a \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Graphical install English - English - Continue other - Continue Europe - Continue Russian Federation - Continue United States - en_US.UTF-8 - Continue American English - Continue Loading... Hostname: ex Root password: 1 Username: al password: 1 Moscow+00 - Moscow Guided - use entire disk All files in one partition Finish Yes Install the base system... Scan extra - No Russian Federation deb.debian.org Proxy - Continue Configure the package manager... Participate - No Select and install software: Debian desktop environment KDE Plasma standard system utilites ... Install the GRUB boot loader - Yes /dev/sda Finish the installation reboot \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b su 1 sudo apt install build-essential dkms linux-headers-$(uname -r) cd /tmp http://download.virtualbox.org/virtualbox/ http://download.virtualbox.org/virtualbox/7.1.6/ http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso wget http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso mount -o loop,ro VBoxGuestAdditions_7.1.6.iso /mnt sh /mnt/VBoxLinuxAdditions.run sudo shutdown now","title":"kde"},{"location":"kde/#kde","text":"https://cdimage.debian.org/debian-cd/current/amd64/bt-cd/debian-12.10.0-amd64-netinst.iso.torrent \u0418\u043c\u044f: kde \u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 \u041f\u0430\u043c\u044f\u0442\u044c: 1024 \u041c\u0431 \u041f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u044b: 2 \u0414\u0438\u0441\u043a: 30 \u0413\u0431 \u0413\u043e\u0442\u043e\u0432\u043e \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u041e\u0431\u0449\u0438\u0435 - \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e - \u041e\u0431\u0449\u0438\u0439 \u0431\u0443\u0444\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0430 - \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0414\u0438\u0441\u043f\u043b\u0435\u0439 - \u0412\u0438\u0434\u0435\u043e\u043f\u0430\u043c\u044f\u0442\u044c - 128 \u041c\u0431 \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c 3D-\u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u0435 \u0421\u0435\u0442\u044c - \u0422\u0438\u043f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f - \u0421\u0435\u0442\u0435\u0432\u043e\u0439 \u043c\u043e\u0441\u0442 \u041e\u041a \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c Graphical install English - English - Continue other - Continue Europe - Continue Russian Federation - Continue United States - en_US.UTF-8 - Continue American English - Continue Loading... Hostname: ex Root password: 1 Username: al password: 1 Moscow+00 - Moscow Guided - use entire disk All files in one partition Finish Yes Install the base system... Scan extra - No Russian Federation deb.debian.org Proxy - Continue Configure the package manager... Participate - No Select and install software: Debian desktop environment KDE Plasma standard system utilites ... Install the GRUB boot loader - Yes /dev/sda Finish the installation reboot","title":"KDE"},{"location":"kde/#_1","text":"su 1 sudo apt install build-essential dkms linux-headers-$(uname -r) cd /tmp http://download.virtualbox.org/virtualbox/ http://download.virtualbox.org/virtualbox/7.1.6/ http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso wget http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso mount -o loop,ro VBoxGuestAdditions_7.1.6.iso /mnt sh /mnt/VBoxLinuxAdditions.run sudo shutdown now","title":"\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b"},{"location":"lxde/","text":"lxde VirtualBox - CTRL+N \u0418\u043c\u044f lxde 2048 \u041c\u0411 4 \u0426\u041f 40 \u0413\u0411 \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0431\u0443\u0444\u0435\u0440 256 \u041c\u0411 \u0432\u0438\u0434\u0435\u043e 100% \u0421\u0435\u0442\u0435\u0432\u043e\u0439 \u043c\u043e\u0441\u0442 \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c ENTER 4 \u0440\u0430\u0437\u0430 Load... ex al Eastern disk (1 \u0432\u0430\u0440\u0438\u0430\u043d\u0442) Install... apt desktop LXDE ... GRUB ENTER /dev/sda reboot sudo apt install build-essential dkms linux-headers-$(uname -r) cd /tmp wget http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso mount -o loop,ro VBoxGuestAdditions_7.1.6.iso /mnt sh /mnt/VBoxLinuxAdditions.run sudo shutdown now \u041e\u0431\u0449\u0438\u0435 \u043f\u0430\u043f\u043a\u0438 \u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435: C:\\Users\\raide \u0418\u043c\u044f \u043f\u0430\u043f\u043a\u0438: raide \u0422\u043e\u0447\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f: /mnt/raide \u0410\u0432\u0442\u043e-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435","title":"lxde"},{"location":"lxde/#lxde","text":"VirtualBox - CTRL+N \u0418\u043c\u044f lxde 2048 \u041c\u0411 4 \u0426\u041f 40 \u0413\u0411 \u0414\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0431\u0443\u0444\u0435\u0440 256 \u041c\u0411 \u0432\u0438\u0434\u0435\u043e 100% \u0421\u0435\u0442\u0435\u0432\u043e\u0439 \u043c\u043e\u0441\u0442","title":"lxde"},{"location":"lxde/#_1","text":"ENTER 4 \u0440\u0430\u0437\u0430 Load... ex al Eastern disk (1 \u0432\u0430\u0440\u0438\u0430\u043d\u0442) Install...","title":"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c"},{"location":"lxde/#apt","text":"desktop LXDE ... GRUB ENTER /dev/sda","title":"apt"},{"location":"lxde/#reboot","text":"sudo apt install build-essential dkms linux-headers-$(uname -r) cd /tmp wget http://download.virtualbox.org/virtualbox/7.1.6/VBoxGuestAdditions_7.1.6.iso mount -o loop,ro VBoxGuestAdditions_7.1.6.iso /mnt sh /mnt/VBoxLinuxAdditions.run sudo shutdown now","title":"reboot"},{"location":"lxde/#_2","text":"\u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435: C:\\Users\\raide \u0418\u043c\u044f \u043f\u0430\u043f\u043a\u0438: raide \u0422\u043e\u0447\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f: /mnt/raide \u0410\u0432\u0442\u043e-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435","title":"\u041e\u0431\u0449\u0438\u0435 \u043f\u0430\u043f\u043a\u0438"},{"location":"python/","text":"\u0412\u0432\u043e\u0434-\u0432\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 name, surname = 'alex', 'vere' print() print('Hello, World !') print() # \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 print('Hello','World !') \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 sep print('a', 'b', sep='+') # a+b \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 end print('a', end='+') print('b') # a+b input() print('\u041f\u0440\u0438\u0432\u0435\u0442,', input()) \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0451\u043d \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 input() \u0430 \u0443\u0436\u0435 \u0437\u0430\u0442\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0432\u044b\u0432\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \"\u041f\u0440\u0438\u0432\u0435\u0442, \u0412\u0430\u0441\u044f\" \u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f ** \u0432\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c // \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 % \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f - \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043c\u0438\u043d\u0443\u0441 a = -1 int() \u0424\u0443\u043d\u043a\u0446\u0438\u044f int() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e ( \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e ) str() \u0424\u0443\u043d\u043a\u0446\u0438\u044f str() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0446\u0438\u0444\u0440 \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0438\u043c\u0435\u0435\u0442 \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0435 \u0446\u0438\u0444\u0440\u044b print(a // 10) # \u0446\u0438\u0444\u0440\u0430 1 print(a % 10) # \u0446\u0438\u0444\u0440\u0430 2 \u0422\u0440\u0438 \u0446\u0438\u0444\u0440\u044b print(a // 100) # \u0446\u0438\u0444\u0440\u0430 1 print(a % 100 // 10) # \u0446\u0438\u0444\u0440\u0430 2 print(a % 10) # \u0446\u0438\u0444\u0440\u0430 3 \u041f\u0440\u0438\u043c\u0435\u0440 \u0411\u0435\u0440\u0451\u043c \u0447\u0438\u0441\u043b\u043e 987 987 % 100 = 87 87 // 10 = 8 \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043a\u0440\u0430\u0439\u043d\u044f\u044f \u043f\u0440\u0430\u0432\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a print(a % 10) \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0446\u0438\u0444\u0440 \u0426\u0438\u0444\u0440\u0430 1. a % 10 n-0 // 10 n-1 2. a % 10 n-1 // 10 n-2 3. a % 10 n-2 // 10 n-3 ... n-2. a % 10 3 // 10 2 n-1. a % 10 2 // 10 1 n-0. a % 10 1 // 10 0 \u041f\u0440\u0438\u043c\u0435\u0440 abc = int(input()) a = abc % 1000 // 100 b = abc % 100 // 10 c = abc % 10 // 1 print('\u0421\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440', '=', a + b + c) print('\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440', '=', a * b * c) # \u0421\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440 = <\u0441\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440> # \u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440 = <\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440> \u041f\u0440\u0438\u043c\u0435\u0440 2 def extract_digits(num): return [num // 10 ** i % 10 for i in range(len(str(num)))][::-1]","title":"\u0412\u0432\u043e\u0434-\u0432\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python/#-","text":"name, surname = 'alex', 'vere'","title":"\u0412\u0432\u043e\u0434-\u0432\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python/#print","text":"print('Hello, World !') print() # \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 print('Hello','World !')","title":"print()"},{"location":"python/#sep","text":"print('a', 'b', sep='+') # a+b","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 sep"},{"location":"python/#end","text":"print('a', end='+') print('b') # a+b","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 end"},{"location":"python/#input","text":"print('\u041f\u0440\u0438\u0432\u0435\u0442,', input()) \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0451\u043d \u0432\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 input() \u0430 \u0443\u0436\u0435 \u0437\u0430\u0442\u0435\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0432\u044b\u0432\u043e\u0434 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \"\u041f\u0440\u0438\u0432\u0435\u0442, \u0412\u0430\u0441\u044f\"","title":"input()"},{"location":"python/#_1","text":"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f ** \u0432\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c // \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 % \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f - \u0443\u043d\u0430\u0440\u043d\u044b\u0439 \u043c\u0438\u043d\u0443\u0441 a = -1","title":"\u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430"},{"location":"python/#int","text":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f int() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e ( \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e )","title":"int()"},{"location":"python/#str","text":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f str() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u0440\u043e\u043a\u0443","title":"str()"},{"location":"python/#_2","text":"\u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0438\u043c\u0435\u0435\u0442 \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0435 \u0446\u0438\u0444\u0440\u044b print(a // 10) # \u0446\u0438\u0444\u0440\u0430 1 print(a % 10) # \u0446\u0438\u0444\u0440\u0430 2 \u0422\u0440\u0438 \u0446\u0438\u0444\u0440\u044b print(a // 100) # \u0446\u0438\u0444\u0440\u0430 1 print(a % 100 // 10) # \u0446\u0438\u0444\u0440\u0430 2 print(a % 10) # \u0446\u0438\u0444\u0440\u0430 3","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0446\u0438\u0444\u0440"},{"location":"python/#_3","text":"\u0411\u0435\u0440\u0451\u043c \u0447\u0438\u0441\u043b\u043e 987 987 % 100 = 87 87 // 10 = 8 \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043a\u0440\u0430\u0439\u043d\u044f\u044f \u043f\u0440\u0430\u0432\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a print(a % 10)","title":"\u041f\u0440\u0438\u043c\u0435\u0440"},{"location":"python/#_4","text":"\u0426\u0438\u0444\u0440\u0430 1. a % 10 n-0 // 10 n-1 2. a % 10 n-1 // 10 n-2 3. a % 10 n-2 // 10 n-3 ... n-2. a % 10 3 // 10 2 n-1. a % 10 2 // 10 1 n-0. a % 10 1 // 10 0","title":"\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0446\u0438\u0444\u0440"},{"location":"python/#_5","text":"abc = int(input()) a = abc % 1000 // 100 b = abc % 100 // 10 c = abc % 10 // 1 print('\u0421\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440', '=', a + b + c) print('\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440', '=', a * b * c) # \u0421\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440 = <\u0441\u0443\u043c\u043c\u0430 \u0446\u0438\u0444\u0440> # \u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440 = <\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0438\u0444\u0440>","title":"\u041f\u0440\u0438\u043c\u0435\u0440"},{"location":"python/#2","text":"def extract_digits(num): return [num // 10 ** i % 10 for i in range(len(str(num)))][::-1]","title":"\u041f\u0440\u0438\u043c\u0435\u0440 2"},{"location":"python2/","text":"\u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043b\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e input() user_name = input(\"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \") print(f\"\u041f\u0440\u0438\u0432\u0435\u0442, {user_name}! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c!\") number1 = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: \") number2 = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: \") sum_result = float(number1) + float(number2) print(f\"\u0421\u0443\u043c\u043c\u0430 \u0447\u0438\u0441\u0435\u043b {number1} \u0438 {number2} \u0440\u0430\u0432\u043d\u0430: {sum_result}\") \u0424\u0443\u043d\u043a\u0446\u0438\u044f input() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u043c \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c int() \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0414\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 len() len() \u0421\u0442\u0440\u043e\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0438 \u0443\u043c\u043d\u043e\u0436\u0430\u0442\u044c \u043d\u0430 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0438 in \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 in \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u0445\u043e\u0434\u0438\u0442 \u043b\u0438 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 print('alex' in 'alexey') # True s = 'All you need is love' if 'love' in s: print('\u2764\ufe0f') else: print('\ud83d\udc94') \u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a [] \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043a\u043e\u0431\u043e\u043a \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b \u0441\u0442\u0440\u043e\u043a\u0438 print(\"\u041f\u0440\u0438\u0432\u0435\u0442\"[2]) # \u0438 \u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043c\u0435\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 -1 print(\"\u041f\u0440\u0438\u0432\u0435\u0442\"[-1]) # \u0442 \u0418\u043d\u0434\u0435\u043a\u0441 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 \u0421\u0438\u043c\u0432\u043e\u043b \u041f \u0440 \u0438 \u0432 \u0435 \u0442 \u041f \u0440 \u0438 \u0432 \u0435 \u0442 \u0418\u0442\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a range(len(s)) s = '\u041f\u0440\u0438\u0432\u0435\u0442' for i in range(len(s)): print(s[i]) \u0438\u043b\u0438 for i in '\u041f\u0440\u0438\u0432\u0435\u0442': print(i) \u0421\u0440\u0435\u0437\u044b \u0421\u0440\u0435\u0437\u044b (slices) \u0432 Python \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0442\u044c \u0447\u0430\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043f\u0438\u0441\u043a\u0438 \u0438\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436\u0438. \u0412\u043e\u0442 \u0434\u0432\u0430 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0440\u0435\u0437\u043e\u0432 \u041f\u0440\u0438\u043c\u0435\u0440 1: \u0421\u0440\u0435\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 # \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # \u0421\u0440\u0435\u0437 \u0441 2-\u0433\u043e \u043f\u043e 5-\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 (\u0438\u043d\u0434\u0435\u043a\u0441\u044b 2, 3, 4) slice_list = my_list[2:5] print(slice_list) # \u0412\u044b\u0432\u043e\u0434: [2, 3, 4] \u041f\u0440\u0438\u043c\u0435\u0440 2: \u0421\u0440\u0435\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 # \u0418\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 my_string = \"Hello, World!\" # \u0421\u0440\u0435\u0437 \u0441 7-\u0433\u043e \u043f\u043e 12-\u0439 \u0441\u0438\u043c\u0432\u043e\u043b (\u0438\u043d\u0434\u0435\u043a\u0441\u044b 7, 8, 9, 10, 11) slice_string = my_string[7:12] print(slice_string) # \u0412\u044b\u0432\u043e\u0434: World \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0441\u0440\u0435\u0437\u0430: [\u043d\u0430\u0447\u0430\u043b\u043e:\u043a\u043e\u043d\u0435\u0446:\u0448\u0430\u0433] \u043d\u0430\u0447\u0430\u043b\u043e \u2014 \u0438\u043d\u0434\u0435\u043a\u0441, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441\u0440\u0435\u0437 (\u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e). \u043a\u043e\u043d\u0435\u0446 \u2014 \u0438\u043d\u0434\u0435\u043a\u0441, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0440\u0435\u0437 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442). \u0448\u0430\u0433 \u2014 \u0448\u0430\u0433, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 1). \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u043e , \u0441\u0440\u0435\u0437 \u043d\u0430\u0447\u043d\u0451\u0442\u0441\u044f \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0435\u0446 , \u0441\u0440\u0435\u0437 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: print(my_list[:5]) # \u0412\u044b\u0432\u043e\u0434: [0, 1, 2, 3, 4] print(my_list[5:]) # \u0412\u044b\u0432\u043e\u0434: [5, 6, 7, 8, 9] \u041c\u0435\u0442\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a capitalize swapcase title lower upper \u0412\u043e\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u043c\u0443 \u043f\u0440\u0438\u043c\u0435\u0440\u0443 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 Python: 1. capitalize : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".capitalize()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440 2. swapcase : print(\"\u041f\u0440\u0418\u0432\u0415\u0442 \u041c\u0438\u0420\".swapcase()) # \u0412\u044b\u0432\u043e\u0434: \u043f\u0420\u0438\u0412\u0435\u0422 \u043c\u0418\u0440 3. title : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".title()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0440\u0438\u0432\u0435\u0442 \u041c\u0438\u0440 4. lower : print(\"\u041f\u0420\u0418\u0412\u0415\u0422 \u041c\u0418\u0420\".lower()) # \u0412\u044b\u0432\u043e\u0434: \u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440 5. upper : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".upper()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0420\u0418\u0412\u0415\u0422 \u041c\u0418\u0420 \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 stepik.org \u0421\u0440\u0435\u0437\u044b \u0441\u0442\u0440\u043e\u043a","title":"\u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python2/#_1","text":"\u0414\u043b\u044f \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e input() user_name = input(\"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \") print(f\"\u041f\u0440\u0438\u0432\u0435\u0442, {user_name}! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c!\") number1 = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: \") number2 = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: \") sum_result = float(number1) + float(number2) print(f\"\u0421\u0443\u043c\u043c\u0430 \u0447\u0438\u0441\u0435\u043b {number1} \u0438 {number2} \u0440\u0430\u0432\u043d\u0430: {sum_result}\") \u0424\u0443\u043d\u043a\u0446\u0438\u044f input() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0430\u043c \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c int() \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","title":"\u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python2/#len","text":"len() \u0421\u0442\u0440\u043e\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0438 \u0443\u043c\u043d\u043e\u0436\u0430\u0442\u044c \u043d\u0430 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e","title":"\u0414\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 len()"},{"location":"python2/#in","text":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 in \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u0445\u043e\u0434\u0438\u0442 \u043b\u0438 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0432 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 print('alex' in 'alexey') # True s = 'All you need is love' if 'love' in s: print('\u2764\ufe0f') else: print('\ud83d\udc94')","title":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0438 in"},{"location":"python2/#_2","text":"\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u043a\u043e\u0431\u043e\u043a \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b \u0441\u0442\u0440\u043e\u043a\u0438 print(\"\u041f\u0440\u0438\u0432\u0435\u0442\"[2]) # \u0438 \u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u043c\u0435\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441 -1 print(\"\u041f\u0440\u0438\u0432\u0435\u0442\"[-1]) # \u0442 \u0418\u043d\u0434\u0435\u043a\u0441 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 \u0421\u0438\u043c\u0432\u043e\u043b \u041f \u0440 \u0438 \u0432 \u0435 \u0442 \u041f \u0440 \u0438 \u0432 \u0435 \u0442","title":"\u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a []"},{"location":"python2/#rangelens","text":"s = '\u041f\u0440\u0438\u0432\u0435\u0442' for i in range(len(s)): print(s[i]) \u0438\u043b\u0438 for i in '\u041f\u0440\u0438\u0432\u0435\u0442': print(i)","title":"\u0418\u0442\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a range(len(s))"},{"location":"python2/#_3","text":"\u0421\u0440\u0435\u0437\u044b (slices) \u0432 Python \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0442\u044c \u0447\u0430\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043f\u0438\u0441\u043a\u0438 \u0438\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436\u0438. \u0412\u043e\u0442 \u0434\u0432\u0430 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0440\u0435\u0437\u043e\u0432","title":"\u0421\u0440\u0435\u0437\u044b"},{"location":"python2/#1","text":"# \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # \u0421\u0440\u0435\u0437 \u0441 2-\u0433\u043e \u043f\u043e 5-\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 (\u0438\u043d\u0434\u0435\u043a\u0441\u044b 2, 3, 4) slice_list = my_list[2:5] print(slice_list) # \u0412\u044b\u0432\u043e\u0434: [2, 3, 4]","title":"\u041f\u0440\u0438\u043c\u0435\u0440 1: \u0421\u0440\u0435\u0437 \u0441\u043f\u0438\u0441\u043a\u0430"},{"location":"python2/#2","text":"# \u0418\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 my_string = \"Hello, World!\" # \u0421\u0440\u0435\u0437 \u0441 7-\u0433\u043e \u043f\u043e 12-\u0439 \u0441\u0438\u043c\u0432\u043e\u043b (\u0438\u043d\u0434\u0435\u043a\u0441\u044b 7, 8, 9, 10, 11) slice_string = my_string[7:12] print(slice_string) # \u0412\u044b\u0432\u043e\u0434: World","title":"\u041f\u0440\u0438\u043c\u0435\u0440 2: \u0421\u0440\u0435\u0437 \u0441\u0442\u0440\u043e\u043a\u0438"},{"location":"python2/#_4","text":"\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0441\u0440\u0435\u0437\u0430: [\u043d\u0430\u0447\u0430\u043b\u043e:\u043a\u043e\u043d\u0435\u0446:\u0448\u0430\u0433] \u043d\u0430\u0447\u0430\u043b\u043e \u2014 \u0438\u043d\u0434\u0435\u043a\u0441, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441\u0440\u0435\u0437 (\u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e). \u043a\u043e\u043d\u0435\u0446 \u2014 \u0438\u043d\u0434\u0435\u043a\u0441, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0440\u0435\u0437 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442). \u0448\u0430\u0433 \u2014 \u0448\u0430\u0433, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 1). \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u043e , \u0441\u0440\u0435\u0437 \u043d\u0430\u0447\u043d\u0451\u0442\u0441\u044f \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0435\u0446 , \u0441\u0440\u0435\u0437 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: print(my_list[:5]) # \u0412\u044b\u0432\u043e\u0434: [0, 1, 2, 3, 4] print(my_list[5:]) # \u0412\u044b\u0432\u043e\u0434: [5, 6, 7, 8, 9]","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"python2/#capitalize-swapcase-title-lower-upper","text":"\u0412\u043e\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u043c\u0443 \u043f\u0440\u0438\u043c\u0435\u0440\u0443 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 Python: 1. capitalize : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".capitalize()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440 2. swapcase : print(\"\u041f\u0440\u0418\u0432\u0415\u0442 \u041c\u0438\u0420\".swapcase()) # \u0412\u044b\u0432\u043e\u0434: \u043f\u0420\u0438\u0412\u0435\u0422 \u043c\u0418\u0440 3. title : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".title()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0440\u0438\u0432\u0435\u0442 \u041c\u0438\u0440 4. lower : print(\"\u041f\u0420\u0418\u0412\u0415\u0422 \u041c\u0418\u0420\".lower()) # \u0412\u044b\u0432\u043e\u0434: \u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440 5. upper : print(\"\u043f\u0440\u0438\u0432\u0435\u0442 \u043c\u0438\u0440\".upper()) # \u0412\u044b\u0432\u043e\u0434: \u041f\u0420\u0418\u0412\u0415\u0422 \u041c\u0418\u0420 \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 stepik.org \u0421\u0440\u0435\u0437\u044b \u0441\u0442\u0440\u043e\u043a","title":"\u041c\u0435\u0442\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a capitalize swapcase title lower upper"},{"location":"python3/","text":"\u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430 \u042d\u0439\u043b\u0435\u0440\u0430 \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0430\u0439\u0434\u0451\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f a 2 + b 2 = c 2 \u0434\u043b\u044f \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0434\u043e 10 n = 10 for c in range(1, n + 1): for a in range(1, c + 1): for b in range(1, a + 1): if a**2 + b**2 == c**2: print(a, b, c) \u041e\u0442\u0432\u0435\u0442: 4 3 5 ( 16 + 9 = 25 ) 8 6 10 ( 64 + 36 = 100 ) \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u0424\u0435\u0440\u043c\u0430 a 3 + b 3 = c 3 \u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0442\u0435\u043e\u0440\u0435\u043c\u0435, \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 :) import time n = 150 for e in range(140, n + 1): start = time.perf_counter() for a in range(1, e + 1): for b in range(1, a + 1): for c in range(1, b + 1): for d in range(1, c + 1): if a**5 + b**5 + c**5 + d**5 == e**5: print(f\"{a} {b} {c} {d} {e}\") elapsed = time.perf_counter() - start print(f\"{e} {elapsed:.1f}\") \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430 \u042d\u0439\u043b\u0435\u0440\u0430"},{"location":"python3/#_1","text":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0430\u0439\u0434\u0451\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f a 2 + b 2 = c 2 \u0434\u043b\u044f \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0434\u043e 10 n = 10 for c in range(1, n + 1): for a in range(1, c + 1): for b in range(1, a + 1): if a**2 + b**2 == c**2: print(a, b, c) \u041e\u0442\u0432\u0435\u0442: 4 3 5 ( 16 + 9 = 25 ) 8 6 10 ( 64 + 36 = 100 )","title":"\u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430 \u042d\u0439\u043b\u0435\u0440\u0430"},{"location":"python3/#_2","text":"a 3 + b 3 = c 3 \u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0442\u0435\u043e\u0440\u0435\u043c\u0435, \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 :) import time n = 150 for e in range(140, n + 1): start = time.perf_counter() for a in range(1, e + 1): for b in range(1, a + 1): for c in range(1, b + 1): for d in range(1, c + 1): if a**5 + b**5 + c**5 + d**5 == e**5: print(f\"{a} {b} {c} {d} {e}\") elapsed = time.perf_counter() - start print(f\"{e} {elapsed:.1f}\") \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u0424\u0435\u0440\u043c\u0430"},{"location":"python4/","text":"\u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 if \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 if \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 else: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 = \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f == \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 6 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 > \u0431\u043e\u043b\u044c\u0448\u0435 < \u043c\u0435\u043d\u044c\u0448\u0435 >= \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e <= \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e == \u0440\u0430\u0432\u043d\u043e != \u043d\u0435 \u0440\u0430\u0432\u043d\u043e \u0426\u0435\u043f\u043e\u0447\u043a\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0439 if 1 < n < 11: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 if a == b == c: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0422\u0440\u0430\u043d\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0415\u0441\u043b\u0438 \u0430 \u0440\u0430\u0432\u043d\u043e \u0431 \u0438 \u0431 \u0440\u0430\u0432\u043d\u043e \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0440\u0430\u0432\u043d\u043e \u0432 \u0415\u0441\u043b\u0438 \u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431 \u0438 \u0431 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432 \u0415\u0441\u043b\u0438 \u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0431 \u0438 \u0431 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0432 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u0430 != \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0439 \u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b not and or \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430 \u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 and \u043b\u043e\u0436\u043d\u043e, \u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 or \u0438\u0441\u0442\u0438\u043d\u0430 - \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u041a\u0430\u0441\u043a\u0430\u0434\u043d\u044b\u0439 \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 if \u0443\u0441\u043b\u043e\u0432\u0438\u04351: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 elif \u0443\u0441\u043b\u043e\u0432\u0438\u04352: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 ... else: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430","title":"\u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440"},{"location":"python4/#_1","text":"if \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 if \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 else: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 = \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f == \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 6 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 > \u0431\u043e\u043b\u044c\u0448\u0435 < \u043c\u0435\u043d\u044c\u0448\u0435 >= \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e <= \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e == \u0440\u0430\u0432\u043d\u043e != \u043d\u0435 \u0440\u0430\u0432\u043d\u043e","title":"\u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440"},{"location":"python4/#_2","text":"if 1 < n < 11: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 if a == b == c: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430","title":"\u0426\u0435\u043f\u043e\u0447\u043a\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0439"},{"location":"python4/#_3","text":"\u0415\u0441\u043b\u0438 \u0430 \u0440\u0430\u0432\u043d\u043e \u0431 \u0438 \u0431 \u0440\u0430\u0432\u043d\u043e \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0440\u0430\u0432\u043d\u043e \u0432 \u0415\u0441\u043b\u0438 \u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431 \u0438 \u0431 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432 \u0415\u0441\u043b\u0438 \u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0431 \u0438 \u0431 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0432 , \u0437\u043d\u0430\u0447\u0438\u0442 \u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0432 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u0430 != \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0439","title":"\u0422\u0440\u0430\u043d\u0437\u0438\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c"},{"location":"python4/#_4","text":"not and or","title":"\u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b"},{"location":"python4/#_5","text":"\u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 and \u043b\u043e\u0436\u043d\u043e, \u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 or \u0438\u0441\u0442\u0438\u043d\u0430 - \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f","title":"\u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430"},{"location":"python4/#_6","text":"if \u0443\u0441\u043b\u043e\u0432\u0438\u04351: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 elif \u0443\u0441\u043b\u043e\u0432\u0438\u04352: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 ... else: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430","title":"\u041a\u0430\u0441\u043a\u0430\u0434\u043d\u044b\u0439 \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440"},{"location":"python5/","text":"\u041c\u043e\u0434\u0443\u043b\u044c math \u041c\u043e\u0434\u0443\u043b\u044c - \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0415\u0451 ( \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 ) \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043a \u043d\u0430\u0448\u0435\u0439 ( \u0432\u0430\u0448\u0435\u0439 ) \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u0421\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u044b \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043e \u043c\u043e\u0434\u0443\u043b\u0435 math import math \u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u043f\u0435\u0440\u0435\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c import math \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u0430\u043a n5 = math.sqrt(25) \u0415\u0441\u043b\u0438 \u0432\u044b \u043b\u0435\u043d\u0438\u0432\u044b\u0439, \u0438 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0438\u0441\u0430\u0442\u044c math.sqrt , \u0430 \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e sqrt \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c from math import * n5 = sqrt(25) \u041d\u043e \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b ( \u0438\u043b\u0438 \u0438\u0433\u0440\u044b ) \u0432 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 ( \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f ) from math import sqrt # \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 sqrt - \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u043d\u044f n5 = sqrt(25) \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (\u0438 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b) \u043c\u043e\u0434\u0443\u043b\u044f math \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 abs() \u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 ( \u043c\u043e\u0434\u0443\u043b\u044c ) - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c int() \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043d\u0443\u043b\u044f - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c round() \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043f\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c round(x, 2) \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e x \u0434\u043e 2\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 floor() \u041f\u043e\u043b ceil() \u041f\u043e\u0442\u043e\u043b\u043e\u043a sqrt() \u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c pow(x, 2) \u0412\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 x \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c 2 factorial() \u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b pi 3.14 log(x) \u041d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x. \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0430 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 e log10(x) \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x. \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0430 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 10 log(x, b) \u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x \u043f\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044e b \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u041c\u043e\u0434\u0443\u043b\u044c math"},{"location":"python5/#math","text":"\u041c\u043e\u0434\u0443\u043b\u044c - \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0415\u0451 ( \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 ) \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043a \u043d\u0430\u0448\u0435\u0439 ( \u0432\u0430\u0448\u0435\u0439 ) \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u0421\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u044b \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043e \u043c\u043e\u0434\u0443\u043b\u0435 math","title":"\u041c\u043e\u0434\u0443\u043b\u044c math"},{"location":"python5/#import-math","text":"\u041d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u043f\u0435\u0440\u0435\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c import math \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u0430\u043a n5 = math.sqrt(25) \u0415\u0441\u043b\u0438 \u0432\u044b \u043b\u0435\u043d\u0438\u0432\u044b\u0439, \u0438 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0438\u0441\u0430\u0442\u044c math.sqrt , \u0430 \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e sqrt \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c from math import * n5 = sqrt(25) \u041d\u043e \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b ( \u0438\u043b\u0438 \u0438\u0433\u0440\u044b ) \u0432 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 ( \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f ) from math import sqrt # \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 sqrt - \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u043d\u044f n5 = sqrt(25)","title":"import math"},{"location":"python5/#math_1","text":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 abs() \u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 ( \u043c\u043e\u0434\u0443\u043b\u044c ) - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c int() \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043d\u0443\u043b\u044f - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c round() \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e \u043f\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 - \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c round(x, 2) \u041e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u0442 \u0447\u0438\u0441\u043b\u043e x \u0434\u043e 2\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 floor() \u041f\u043e\u043b ceil() \u041f\u043e\u0442\u043e\u043b\u043e\u043a sqrt() \u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c pow(x, 2) \u0412\u043e\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430 x \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u044c 2 factorial() \u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b pi 3.14 log(x) \u041d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x. \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0430 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 e log10(x) \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x. \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0430 \u0440\u0430\u0432\u043d\u043e \u0447\u0438\u0441\u043b\u0443 10 log(x, b) \u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0447\u0438\u0441\u043b\u0430 x \u043f\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044e b \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (\u0438 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b) \u043c\u043e\u0434\u0443\u043b\u044f math"},{"location":"python6/","text":"\u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 int, float \u0426\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043b\u0438\u0442\u0435\u0440\u0430\u043b n = 1 \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e n = int('1') 7 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 sum = a + b dif = a - b pro = a * b div = a / b div = a // b mod = a % b exp = a ** b \u041f\u0440\u0438 \u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u043f\u0440\u0438 \u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u043d\u0430 \u043d\u043e\u043b\u044c - \u043e\u0448\u0438\u0431\u043a\u0430 \u041c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b _ \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 n = 25_000_000 \u0426\u0435\u043b\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d \u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043c\u0438 float pi = 3.1415 # \u043b\u0438\u0442\u0435\u0440\u0430\u043b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u0435\u043b\u0435\u043d\u0438\u044f / \u0432\u0441\u0435\u0433\u0434\u0430 \u0434\u0430\u0451\u0442 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 float, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u0431\u0430 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430 \u0431\u044b\u043b\u0438 int \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 n = float('1') # 1.0 \u0410\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b + - / * ** \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 int \u0438 float \u041d\u0435\u044f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0422\u0438\u043f int \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u0438\u043f float \u0442\u0430\u043c, \u0433\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u042f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0422\u0438\u043f float \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u0441\u0430\u043c \u043d\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u0442\u0438\u043f int \u0414\u043b\u044f \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430 float \u0432 \u0442\u0438\u043f int \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u044f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 number_type_int = int( number_type_float ) \u041f\u0440\u0438 \u044f\u0432\u043d\u043e\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0447\u0438\u0441\u043b\u0430 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0438 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043d\u0435\u043e\u0431\u0440\u0430\u0442\u0438\u043c\u0430\u044f \u043f\u043e\u0442\u0435\u0440\u044f \u0447\u0430\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 print() input() int() float() \u0424\u0443\u043d\u043a\u0446\u0438\u0438 min() \u0438 max() n = int(input()) max = 0 min = 9 while n > 0: digit = n % 10 if digit > max: max = digit if digit < min: min = digit n = n // 10 print(f\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430 {max}\") print(f\"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430 {min}\") \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 min \u0438 max n = int(input()) max_digit = 0 min_digit = 9 while n > 0: cur_digit = n % 10 max_digit = max(max_digit, cur_digit) min_digit = min(min_digit, cur_digit) n //= 10 print(\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430\", max_digit) print(\"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430\", min_digit) \u0424\u0443\u043d\u043a\u0446\u0438\u044f abs() abs() - \u044d\u0442\u043e \u043c\u043e\u0434\u0443\u043b\u044c \u0447\u0438\u0441\u043b\u0430, \u0442.\u0435. \u0435\u0433\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 \u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 string \u041a\u0440\u043e\u043c\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u041c\u0435\u0442\u043e\u0434\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0438\u043c\u044f_\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.\u0438\u043c\u044f_\u043c\u0435\u0442\u043e\u0434\u0430() s.upper() # \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \u0412 \u0412\u0415\u0420\u0425\u041d\u0418\u0419 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 len() \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 str() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u041a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f - \u044d\u0442\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u041a\u043e\u043c\u043c\u0443\u0442\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f, \u044d\u0442\u043e \u0442\u0430\u043a\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u0435\u0441\u0442 \u0441\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f (\u0441\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a - \u044d\u0442\u043e \u043d\u0435 \u043a\u043e\u043c\u043c\u0443\u0442\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f) \u0423\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u0447\u0438\u0441\u043b\u043e s = 'Hi' * 4 print(s) # HiHiHiHi \u0422\u0440\u043e\u0439\u043d\u044b\u0435 \u043a\u0430\u0432\u044b\u0447\u043a\u0438 ''' \u043c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 ''' \u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 in 'a' in s s = input() if '.' not in s: print('\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0442\u043e\u0447\u043a\u0438') \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 s1 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 s2 , \u0442\u043e \u0433\u043e\u0432\u043e\u0440\u044f\u0442, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 s1 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 s2 . \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 in \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python6/#_1","text":"int, float","title":"\u0422\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"python6/#_2","text":"n = 1 \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e n = int('1') 7 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 sum = a + b dif = a - b pro = a * b div = a / b div = a // b mod = a % b exp = a ** b \u041f\u0440\u0438 \u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u043f\u0440\u0438 \u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u043d\u0430 \u043d\u043e\u043b\u044c - \u043e\u0448\u0438\u0431\u043a\u0430 \u041c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b _ \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 n = 25_000_000 \u0426\u0435\u043b\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d \u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043c\u0438","title":"\u0426\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043b\u0438\u0442\u0435\u0440\u0430\u043b"},{"location":"python6/#float","text":"pi = 3.1415 # \u043b\u0438\u0442\u0435\u0440\u0430\u043b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0434\u0435\u043b\u0435\u043d\u0438\u044f / \u0432\u0441\u0435\u0433\u0434\u0430 \u0434\u0430\u0451\u0442 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 float, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u0431\u0430 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u0430 \u0431\u044b\u043b\u0438 int \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0447\u0438\u0441\u043b\u043e \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 n = float('1') # 1.0","title":"float"},{"location":"python6/#_3","text":"+ - / * **","title":"\u0410\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b"},{"location":"python6/#int-float","text":"","title":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 int \u0438 float"},{"location":"python6/#_4","text":"\u0422\u0438\u043f int \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u0438\u043f float \u0442\u0430\u043c, \u0433\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e","title":"\u041d\u0435\u044f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"python6/#_5","text":"\u0422\u0438\u043f float \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u0441\u0430\u043c \u043d\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u0442\u0438\u043f int \u0414\u043b\u044f \u043f\u0440\u0435\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430 float \u0432 \u0442\u0438\u043f int \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u044f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 number_type_int = int( number_type_float ) \u041f\u0440\u0438 \u044f\u0432\u043d\u043e\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0447\u0438\u0441\u043b\u0430 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0438 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043d\u0435\u043e\u0431\u0440\u0430\u0442\u0438\u043c\u0430\u044f \u043f\u043e\u0442\u0435\u0440\u044f \u0447\u0430\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438","title":"\u042f\u0432\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"python6/#_6","text":"print() input() int() float()","title":"\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"},{"location":"python6/#min-max","text":"n = int(input()) max = 0 min = 9 while n > 0: digit = n % 10 if digit > max: max = digit if digit < min: min = digit n = n // 10 print(f\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430 {max}\") print(f\"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430 {min}\") \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 min \u0438 max n = int(input()) max_digit = 0 min_digit = 9 while n > 0: cur_digit = n % 10 max_digit = max(max_digit, cur_digit) min_digit = min(min_digit, cur_digit) n //= 10 print(\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430\", max_digit) print(\"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0446\u0438\u0444\u0440\u0430 \u0440\u0430\u0432\u043d\u0430\", min_digit)","title":"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 min() \u0438 max()"},{"location":"python6/#abs","text":"abs() - \u044d\u0442\u043e \u043c\u043e\u0434\u0443\u043b\u044c \u0447\u0438\u0441\u043b\u0430, \u0442.\u0435. \u0435\u0433\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u0430\u044f \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430","title":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f abs()"},{"location":"python6/#string","text":"\u041a\u0440\u043e\u043c\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u041c\u0435\u0442\u043e\u0434\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0438\u043c\u044f_\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.\u0438\u043c\u044f_\u043c\u0435\u0442\u043e\u0434\u0430() s.upper() # \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 \u0412 \u0412\u0415\u0420\u0425\u041d\u0418\u0419 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 len() \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 str() \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u041a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f - \u044d\u0442\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u041a\u043e\u043c\u043c\u0443\u0442\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f, \u044d\u0442\u043e \u0442\u0430\u043a\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u044b \u043c\u0435\u0441\u0442 \u0441\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f (\u0441\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a - \u044d\u0442\u043e \u043d\u0435 \u043a\u043e\u043c\u043c\u0443\u0442\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f)","title":"\u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 string"},{"location":"python6/#_7","text":"s = 'Hi' * 4 print(s) # HiHiHiHi","title":"\u0423\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u0447\u0438\u0441\u043b\u043e"},{"location":"python6/#_8","text":"''' \u043c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 '''","title":"\u0422\u0440\u043e\u0439\u043d\u044b\u0435 \u043a\u0430\u0432\u044b\u0447\u043a\u0438"},{"location":"python6/#in","text":"'a' in s s = input() if '.' not in s: print('\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0442\u043e\u0447\u043a\u0438') \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 s1 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 s2 , \u0442\u043e \u0433\u043e\u0432\u043e\u0440\u044f\u0442, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 s1 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 s2 . \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 in \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438. \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 in"},{"location":"python7/","text":"\u0426\u0438\u043a\u043b\u044b \u041e\u0434\u043d\u0430 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f - \u044d\u0442\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0446\u0438\u043a\u043b\u0430 1 \u0440\u0430\u0437 \u0413\u043e\u0434 - \u044d\u0442\u043e 12 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439: \u044f\u043d\u0432\u0430\u0440\u044c, \u0444\u0435\u0432\u0440\u0430\u043b\u044c... for for ii in range(10): print('Python is awesome!') for \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435_\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439_\u0446\u0438\u043a\u043b\u0430 in range ( \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e_\u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439 ): \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0426\u0438\u043a\u043b \u0432 \u043f\u0438\u0442\u043e\u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f for _ in range(5): print('Python - awesome!') for range \u0426\u0438\u043a\u043b for \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f range \u0432 Python range \u2014 \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b. \u0415\u0451 \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0432 \u0446\u0438\u043a\u043b\u0435 for , \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f. \u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 range : 1 range(\u043a\u043e\u043d\u0435\u0446) \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0442 0 \u0434\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043e\u043d\u0435\u0446 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e). for i in range(5): print(i) # \u0412\u044b\u0432\u043e\u0434: 0, 1, 2, 3, 4 2 range(\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446) \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0442 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u0434\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043e\u043d\u0435\u0446 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e). for i in range(2, 6): print(i) # \u0412\u044b\u0432\u043e\u0434: 2, 3, 4, 5 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 2\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043a\u043e\u043d\u0435\u0446 \u043c\u0438\u043d\u0443\u0441 \u043d\u0430\u0447\u0430\u043b\u043e 6 - 2 = 4 \u0412\u0441\u0435\u0433\u043e - 4 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438 3 range(\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446, \u0448\u0430\u0433) \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441 \u0448\u0430\u0433\u043e\u043c (\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438\u043b\u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c). \u041f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0448\u0430\u0433\u043e\u043c: for i in range(1, 10, 2): print(i) # \u0412\u044b\u0432\u043e\u0434: 1, 3, 5, 7, 9 \u041f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0448\u0430\u0433\u043e\u043c: for i in range(5, 0, -1): print(i) # \u0412\u044b\u0432\u043e\u0434: 5, 4, 3, 2, 1 \u041e\u0442\u043b\u0438\u0447\u0438\u044f: 1 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 : \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0441 0 \u0434\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430. 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 : \u0437\u0430\u0434\u0430\u0451\u0442 \u043d\u0430\u0447\u0430\u043b\u043e \u0438 \u043a\u043e\u043d\u0435\u0446. 3 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 : \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0448\u0430\u0433 (\u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0447\u0451\u0442\u0430). \u042d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u043e\u0432! while \u0426\u0438\u043a\u043b while \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0446\u0438\u043a\u043b\u043e\u043c \u0441 \u043f\u0440\u0435\u0434\u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u0426\u0438\u043a\u043b while \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u0441\u044f \u043d\u0438 \u0440\u0430\u0437\u0443 for \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 counting loops while \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 ( \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e ) conditional loops while \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0411\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u043f\u043e\u0434 \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435\u043c \u0441 \u043e\u0442\u0441\u0442\u0443\u043f\u043e\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043b\u043e\u043c \u0446\u0438\u043a\u043b\u0430 i = 0 while i < 10: print('\u041f\u0440\u0438\u0432\u0435\u0442') i += 1 num = int(input()) while num != -1: print('\u041a\u0432\u0430\u0434\u0440\u0430\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0440\u0430\u0432\u0435\u043d:', num * num) num = int(input()) \u0426\u0438\u043a\u043b for \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0446\u0438\u043a\u043b while text = input() total = 0 while text != 'stop': total += int(text) text = input() print('\u0421\u0443\u043c\u043c\u0430 \u0447\u0438\u0441\u0435\u043b \u0440\u0430\u0432\u043d\u0430', total) \u0411\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0446\u0438\u043a\u043b\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f break \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0446\u0438\u0444\u0440 \u0447\u0438\u0441\u043b\u0430 n = int(input()) while n != 0: last_digit = n % 10 n = n // 10 break, continue \u0414\u043b\u044f \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 break while True: break \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u0438\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0435 (\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435) num = int(input()) flag = True for i in range(2, int(num ** 0.5) + 1): if num % i == 0: flag = False break if num > 1 and flag == True: print('\u0427\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0435') else: print('\u0427\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435') \u0414\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438 \u0446\u0438\u043a\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 continue for i in range(10): continue print(\"\u043d\u0438\u043a\u043e\u0433\u0434\u0430\") # \u044d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 else numbers = [1, 2, 3, 4, 5] for num in numbers: if num == 3: print(\"\u041d\u0430\u0448\u043b\u0438 \u0447\u0438\u0441\u043b\u043e 3!\") break # \u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0446\u0438\u043a\u043b, \u0435\u0441\u043b\u0438 \u043d\u0430\u0448\u043b\u0438 3 else: # \u0421\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0446\u0438\u043a\u043b \u043d\u0435 \u0431\u044b\u043b \u043f\u0440\u0435\u0440\u0432\u0430\u043d print(\"\u0427\u0438\u0441\u043b\u043e 3 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e.\") \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"\u0426\u0438\u043a\u043b\u044b"},{"location":"python7/#_1","text":"\u041e\u0434\u043d\u0430 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f - \u044d\u0442\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0446\u0438\u043a\u043b\u0430 1 \u0440\u0430\u0437 \u0413\u043e\u0434 - \u044d\u0442\u043e 12 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439: \u044f\u043d\u0432\u0430\u0440\u044c, \u0444\u0435\u0432\u0440\u0430\u043b\u044c...","title":"\u0426\u0438\u043a\u043b\u044b"},{"location":"python7/#for","text":"for ii in range(10): print('Python is awesome!') for \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435_\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439_\u0446\u0438\u043a\u043b\u0430 in range ( \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e_\u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439 ): \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0426\u0438\u043a\u043b \u0432 \u043f\u0438\u0442\u043e\u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043d\u0443\u043b\u044f for _ in range(5): print('Python - awesome!')","title":"for"},{"location":"python7/#for-range","text":"\u0426\u0438\u043a\u043b for \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f range \u0432 Python range \u2014 \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u0435\u043b. \u0415\u0451 \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0432 \u0446\u0438\u043a\u043b\u0435 for , \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.","title":"for range"},{"location":"python7/#range","text":"","title":"\u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 range:"},{"location":"python7/#1-range","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0442 0 \u0434\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043e\u043d\u0435\u0446 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e). for i in range(5): print(i) # \u0412\u044b\u0432\u043e\u0434: 0, 1, 2, 3, 4","title":"1 range(\u043a\u043e\u043d\u0435\u0446)"},{"location":"python7/#2-range","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0442 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430\u0447\u0430\u043b\u043e \u0434\u043e \u0447\u0438\u0441\u043b\u0430 \u043a\u043e\u043d\u0435\u0446 (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e). for i in range(2, 6): print(i) # \u0412\u044b\u0432\u043e\u0434: 2, 3, 4, 5 \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 2\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043a\u043e\u043d\u0435\u0446 \u043c\u0438\u043d\u0443\u0441 \u043d\u0430\u0447\u0430\u043b\u043e 6 - 2 = 4 \u0412\u0441\u0435\u0433\u043e - 4 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438","title":"2 range(\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446)"},{"location":"python7/#3-range","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441 \u0448\u0430\u0433\u043e\u043c (\u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438\u043b\u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c). \u041f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0448\u0430\u0433\u043e\u043c: for i in range(1, 10, 2): print(i) # \u0412\u044b\u0432\u043e\u0434: 1, 3, 5, 7, 9 \u041f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0448\u0430\u0433\u043e\u043c: for i in range(5, 0, -1): print(i) # \u0412\u044b\u0432\u043e\u0434: 5, 4, 3, 2, 1","title":"3 range(\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446, \u0448\u0430\u0433)"},{"location":"python7/#_2","text":"1 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 : \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0441 0 \u0434\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430. 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 : \u0437\u0430\u0434\u0430\u0451\u0442 \u043d\u0430\u0447\u0430\u043b\u043e \u0438 \u043a\u043e\u043d\u0435\u0446. 3 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 : \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0448\u0430\u0433 (\u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043e\u0442\u0441\u0447\u0451\u0442\u0430). \u042d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u043e\u0432!","title":"\u041e\u0442\u043b\u0438\u0447\u0438\u044f:"},{"location":"python7/#while","text":"\u0426\u0438\u043a\u043b while \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0446\u0438\u043a\u043b\u043e\u043c \u0441 \u043f\u0440\u0435\u0434\u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u0426\u0438\u043a\u043b while \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u0441\u044f \u043d\u0438 \u0440\u0430\u0437\u0443 for \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 counting loops while \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 ( \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e ) conditional loops while \u0443\u0441\u043b\u043e\u0432\u0438\u0435: \u0431\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u0411\u043b\u043e\u043a \u043a\u043e\u0434\u0430 \u043f\u043e\u0434 \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435\u043c \u0441 \u043e\u0442\u0441\u0442\u0443\u043f\u043e\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043b\u043e\u043c \u0446\u0438\u043a\u043b\u0430 i = 0 while i < 10: print('\u041f\u0440\u0438\u0432\u0435\u0442') i += 1 num = int(input()) while num != -1: print('\u041a\u0432\u0430\u0434\u0440\u0430\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0440\u0430\u0432\u0435\u043d:', num * num) num = int(input()) \u0426\u0438\u043a\u043b for \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0446\u0438\u043a\u043b while text = input() total = 0 while text != 'stop': total += int(text) text = input() print('\u0421\u0443\u043c\u043c\u0430 \u0447\u0438\u0441\u0435\u043b \u0440\u0430\u0432\u043d\u0430', total) \u0411\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0446\u0438\u043a\u043b\u044b \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f break","title":"while"},{"location":"python7/#_3","text":"n = int(input()) while n != 0: last_digit = n % 10 n = n // 10","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0446\u0438\u0444\u0440 \u0447\u0438\u0441\u043b\u0430"},{"location":"python7/#break-continue","text":"\u0414\u043b\u044f \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 break while True: break \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0435 \u0438\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e\u0435 (\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435) num = int(input()) flag = True for i in range(2, int(num ** 0.5) + 1): if num % i == 0: flag = False break if num > 1 and flag == True: print('\u0427\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0435') else: print('\u0427\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435') \u0414\u043b\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438 \u0446\u0438\u043a\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 continue for i in range(10): continue print(\"\u043d\u0438\u043a\u043e\u0433\u0434\u0430\") # \u044d\u0442\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430","title":"break, continue"},{"location":"python7/#else","text":"numbers = [1, 2, 3, 4, 5] for num in numbers: if num == 3: print(\"\u041d\u0430\u0448\u043b\u0438 \u0447\u0438\u0441\u043b\u043e 3!\") break # \u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0446\u0438\u043a\u043b, \u0435\u0441\u043b\u0438 \u043d\u0430\u0448\u043b\u0438 3 else: # \u0421\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442, \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0446\u0438\u043a\u043b \u043d\u0435 \u0431\u044b\u043b \u043f\u0440\u0435\u0440\u0432\u0430\u043d print(\"\u0427\u0438\u0441\u043b\u043e 3 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e.\") \u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a stepik.org","title":"else"}]}